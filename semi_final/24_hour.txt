select count(1)
from (
    select user_id, gmt_occur
    from atec_1000w_ins_data as a
    group by user_id, gmt_occur
) b;
--6573377
--少了三分之一
--想想，要不求个众数吧

select user_id, gmt_occur, client_ip, count(1) as count_num
from atec_1000w_ins_data a
group by user_id, gmt_occur, client_ip;

select count(1) from (
    SELECT user_id, gmt_occur, client_ip, COUNT(1) client_ip_count
	FROM atec_1000w_ins_data as a
	GROUP BY user_id, gmt_occur, client_ip
	ORDER BY user_id, gmt_occur, client_ip, client_ip_count DESC
) bl;

--------------------------------------------------分组众数------------------------------------------------------------
select user_id, gmt_occur, client_ip, client_ip_row
from (
select 
user_id, gmt_occur, client_ip, client_ip_count, 
row_number() over (partition by user_id, gmt_occur order by client_ip_count desc) as client_ip_row
from (
    SELECT 
    user_id, gmt_occur, client_ip, COUNT(1) as client_ip_count
	FROM atec_1000w_ins_data as a
	GROUP BY user_id, gmt_occur, client_ip
) as b
    )c where c.client_ip_row = 1
;
--6573377
--算null了

select count(distinct(client_ip))
from atec_1000w_ins_data as a
;
--没算null
--1793134

-------------------------------------------------I am a beautiful boundary----------------------------------------------

drop table if exists huo_user_id_gmt_occur;

create table if not exists huo_user_id_gmt_occur
as
select 
	a.user_id, a.gmt_occur
from 
	atec_1000w_ins_data as a
group by a.user_id, a.gmt_occur;

select * from huo_user_id_gmt_occur;

select count(1) from huo_user_id_gmt_occur;

-------------------------------------------------------I am a clever boundary-------------------------------------------------

drop table if exists huo_24_hour_user_time_mode;

create table if not exists huo_24_hour_user_time_mode
as
select
	a.user_id as user_id_1, a.gmt_occur as gmt_occur_1, c_client_ip.client_ip as client_ip_mode, 
    c_network.network as network_mode, c_device_sign.device_sign as device_sign_mode, c_info_1.info_1 as info_1_mode,
    c_info_2.info_2 as info_2_mode, c_ip_prov.ip_prov as ip_prov_mode, c_ip_city.ip_city as ip_city_mode,
    c_cert_prov.cert_prov as cert_prov_mode, c_cert_city.cert_city as cert_city_mode,
    c_card_bin_prov.card_bin_prov as card_bin_prov_mode, c_card_bin_city.card_bin_city as card_bin_city_mode,
    c_card_mobile_prov.card_mobile_prov as card_mobile_prov_mode, c_card_mobile_city.card_mobile_city as card_mobile_city_mode,
    c_card_cert_prov.card_cert_prov as card_cert_prov_mode, c_card_cert_city.card_cert_city as card_cert_city_mode,
    c_is_one_people.is_one_people as is_one_people_mode, c_mobile_oper_platform.mobile_oper_platform as mobile_oper_platform_mode,
    c_operation_channel.operation_channel as operation_channel_mode, c_pay_scene.pay_scene as pay_scene_mode,
    c_amt.amt as amt_mode, c_card_cert_no.card_cert_no as card_cert_no_mode, c_opposing_id.opposing_id as opposing_id_mode,
    c_income_card_no.income_card_no as income_card_no_mode, c_income_card_cert_no.income_card_cert_no as income_card_cert_no_mode,
    c_income_card_mobile.income_card_mobile as income_card_mobile_mode, c_income_card_bank_code.income_card_bank_code as income_card_bank_code_mode,
    c_province.province as province_mode, c_city.city as city_mode, c_is_peer_pay.is_peer_pay as is_peer_pay_mode,
    c_version.version as version_mode
from huo_user_id_gmt_occur as a
left join(
    select user_id, gmt_occur, client_ip, client_ip_row from(
        select user_id, gmt_occur, client_ip, client_ip_count,
        row_number() over(partition by user_id, gmt_occur order by client_ip_count desc) as client_ip_row from(
            SELECT user_id, gmt_occur, client_ip, COUNT(1) as client_ip_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, client_ip
        ) as b
    ) c where c.client_ip_row = 1
) c_client_ip
on a.user_id = c_client_ip.user_id
and a.gmt_occur = c_client_ip.gmt_occur
left join(
    select user_id, gmt_occur, network, network_row from(
        select user_id, gmt_occur, network, network_count,
        row_number() over(partition by user_id, gmt_occur order by network_count desc) as network_row from(
            SELECT user_id, gmt_occur, network, COUNT(1) as network_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, network
        ) as b
    ) c where c.network_row = 1
) c_network
on a.user_id = c_network.user_id
and a.gmt_occur = c_network.gmt_occur
left join(
    select user_id, gmt_occur, device_sign, device_sign_row from(
        select user_id, gmt_occur, device_sign, device_sign_count,
        row_number() over(partition by user_id, gmt_occur order by device_sign_count desc) as device_sign_row from(
            SELECT user_id, gmt_occur, device_sign, COUNT(1) as device_sign_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, device_sign
        ) as b
    ) c where c.device_sign_row = 1
) c_device_sign
on a.user_id = c_device_sign.user_id
and a.gmt_occur = c_device_sign.gmt_occur
left join(
    select user_id, gmt_occur, info_1, info_1_row from(
        select user_id, gmt_occur, info_1, info_1_count,
        row_number() over(partition by user_id, gmt_occur order by info_1_count desc) as info_1_row from(
            SELECT user_id, gmt_occur, info_1, COUNT(1) as info_1_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, info_1
        ) as b
    ) c where c.info_1_row = 1
) c_info_1
on a.user_id = c_info_1.user_id
and a.gmt_occur = c_info_1.gmt_occur
left join(
    select user_id, gmt_occur, info_2, info_2_row from(
        select user_id, gmt_occur, info_2, info_2_count,
        row_number() over(partition by user_id, gmt_occur order by info_2_count desc) as info_2_row from(
            SELECT user_id, gmt_occur, info_2, COUNT(1) as info_2_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, info_2
        ) as b
    ) c where c.info_2_row = 1
) c_info_2
on a.user_id = c_info_2.user_id
and a.gmt_occur = c_info_2.gmt_occur
left join(
    select user_id, gmt_occur, ip_prov, ip_prov_row from(
        select user_id, gmt_occur, ip_prov, ip_prov_count,
        row_number() over(partition by user_id, gmt_occur order by ip_prov_count desc) as ip_prov_row from(
            SELECT user_id, gmt_occur, ip_prov, COUNT(1) as ip_prov_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, ip_prov
        ) as b
    ) c where c.ip_prov_row = 1
) c_ip_prov
on a.user_id = c_ip_prov.user_id
and a.gmt_occur = c_ip_prov.gmt_occur
left join(
    select user_id, gmt_occur, ip_city, ip_city_row from(
        select user_id, gmt_occur, ip_city, ip_city_count,
        row_number() over(partition by user_id, gmt_occur order by ip_city_count desc) as ip_city_row from(
            SELECT user_id, gmt_occur, ip_city, COUNT(1) as ip_city_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, ip_city
        ) as b
    ) c where c.ip_city_row = 1
) c_ip_city
on a.user_id = c_ip_city.user_id
and a.gmt_occur = c_ip_city.gmt_occur
left join(
    select user_id, gmt_occur, cert_prov, cert_prov_row from(
        select user_id, gmt_occur, cert_prov, cert_prov_count,
        row_number() over(partition by user_id, gmt_occur order by cert_prov_count desc) as cert_prov_row from(
            SELECT user_id, gmt_occur, cert_prov, COUNT(1) as cert_prov_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, cert_prov
        ) as b
    ) c where c.cert_prov_row = 1
) c_cert_prov
on a.user_id = c_cert_prov.user_id
and a.gmt_occur = c_cert_prov.gmt_occur
left join(
    select user_id, gmt_occur, cert_city, cert_city_row from(
        select user_id, gmt_occur, cert_city, cert_city_count,
        row_number() over(partition by user_id, gmt_occur order by cert_city_count desc) as cert_city_row from(
            SELECT user_id, gmt_occur, cert_city, COUNT(1) as cert_city_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, cert_city
        ) as b
    ) c where c.cert_city_row = 1
) c_cert_city
on a.user_id = c_cert_city.user_id
and a.gmt_occur = c_cert_city.gmt_occur
left join(
    select user_id, gmt_occur, card_bin_prov, card_bin_prov_row from(
        select user_id, gmt_occur, card_bin_prov, card_bin_prov_count,
        row_number() over(partition by user_id, gmt_occur order by card_bin_prov_count desc) as card_bin_prov_row from(
            SELECT user_id, gmt_occur, card_bin_prov, COUNT(1) as card_bin_prov_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, card_bin_prov
        ) as b
    ) c where c.card_bin_prov_row = 1
) c_card_bin_prov
on a.user_id = c_card_bin_prov.user_id
and a.gmt_occur = c_card_bin_prov.gmt_occur
left join(
    select user_id, gmt_occur, card_bin_city, card_bin_city_row from(
        select user_id, gmt_occur, card_bin_city, card_bin_city_count,
        row_number() over(partition by user_id, gmt_occur order by card_bin_city_count desc) as card_bin_city_row from(
            SELECT user_id, gmt_occur, card_bin_city, COUNT(1) as card_bin_city_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, card_bin_city
        ) as b
    ) c where c.card_bin_city_row = 1
) c_card_bin_city
on a.user_id = c_card_bin_city.user_id
and a.gmt_occur = c_card_bin_city.gmt_occur
left join(
    select user_id, gmt_occur, card_mobile_prov, card_mobile_prov_row from(
        select user_id, gmt_occur, card_mobile_prov, card_mobile_prov_count,
        row_number() over(partition by user_id, gmt_occur order by card_mobile_prov_count desc) as card_mobile_prov_row from(
            SELECT user_id, gmt_occur, card_mobile_prov, COUNT(1) as card_mobile_prov_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, card_mobile_prov
        ) as b
    ) c where c.card_mobile_prov_row = 1
) c_card_mobile_prov
on a.user_id = c_card_mobile_prov.user_id
and a.gmt_occur = c_card_mobile_prov.gmt_occur
left join(
    select user_id, gmt_occur, card_mobile_city, card_mobile_city_row from(
        select user_id, gmt_occur, card_mobile_city, card_mobile_city_count,
        row_number() over(partition by user_id, gmt_occur order by card_mobile_city_count desc) as card_mobile_city_row from(
            SELECT user_id, gmt_occur, card_mobile_city, COUNT(1) as card_mobile_city_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, card_mobile_city
        ) as b
    ) c where c.card_mobile_city_row = 1
) c_card_mobile_city
on a.user_id = c_card_mobile_city.user_id
and a.gmt_occur = c_card_mobile_city.gmt_occur
left join(
    select user_id, gmt_occur, card_cert_prov, card_cert_prov_row from(
        select user_id, gmt_occur, card_cert_prov, card_cert_prov_count,
        row_number() over(partition by user_id, gmt_occur order by card_cert_prov_count desc) as card_cert_prov_row from(
            SELECT user_id, gmt_occur, card_cert_prov, COUNT(1) as card_cert_prov_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, card_cert_prov
        ) as b
    ) c where c.card_cert_prov_row = 1
) c_card_cert_prov
on a.user_id = c_card_cert_prov.user_id
and a.gmt_occur = c_card_cert_prov.gmt_occur
left join(
    select user_id, gmt_occur, card_cert_city, card_cert_city_row from(
        select user_id, gmt_occur, card_cert_city, card_cert_city_count,
        row_number() over(partition by user_id, gmt_occur order by card_cert_city_count desc) as card_cert_city_row from(
            SELECT user_id, gmt_occur, card_cert_city, COUNT(1) as card_cert_city_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, card_cert_city
        ) as b
    ) c where c.card_cert_city_row = 1
) c_card_cert_city
on a.user_id = c_card_cert_city.user_id
and a.gmt_occur = c_card_cert_city.gmt_occur
left join(
    select user_id, gmt_occur, is_one_people, is_one_people_row from(
        select user_id, gmt_occur, is_one_people, is_one_people_count,
        row_number() over(partition by user_id, gmt_occur order by is_one_people_count desc) as is_one_people_row from(
            SELECT user_id, gmt_occur, is_one_people, COUNT(1) as is_one_people_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, is_one_people
        ) as b
    ) c where c.is_one_people_row = 1
) c_is_one_people
on a.user_id = c_is_one_people.user_id
and a.gmt_occur = c_is_one_people.gmt_occur
left join(
    select user_id, gmt_occur, mobile_oper_platform, mobile_oper_platform_row from(
        select user_id, gmt_occur, mobile_oper_platform, mobile_oper_platform_count,
        row_number() over(partition by user_id, gmt_occur order by mobile_oper_platform_count desc) as mobile_oper_platform_row from(
            SELECT user_id, gmt_occur, mobile_oper_platform, COUNT(1) as mobile_oper_platform_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, mobile_oper_platform
        ) as b
    ) c where c.mobile_oper_platform_row = 1
) c_mobile_oper_platform
on a.user_id = c_mobile_oper_platform.user_id
and a.gmt_occur = c_mobile_oper_platform.gmt_occur
left join(
    select user_id, gmt_occur, operation_channel, operation_channel_row from(
        select user_id, gmt_occur, operation_channel, operation_channel_count,
        row_number() over(partition by user_id, gmt_occur order by operation_channel_count desc) as operation_channel_row from(
            SELECT user_id, gmt_occur, operation_channel, COUNT(1) as operation_channel_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, operation_channel
        ) as b
    ) c where c.operation_channel_row = 1
) c_operation_channel
on a.user_id = c_operation_channel.user_id
and a.gmt_occur = c_operation_channel.gmt_occur
left join(
    select user_id, gmt_occur, pay_scene, pay_scene_row from(
        select user_id, gmt_occur, pay_scene, pay_scene_count,
        row_number() over(partition by user_id, gmt_occur order by pay_scene_count desc) as pay_scene_row from(
            SELECT user_id, gmt_occur, pay_scene, COUNT(1) as pay_scene_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, pay_scene
        ) as b
    ) c where c.pay_scene_row = 1
) c_pay_scene
on a.user_id = c_pay_scene.user_id
and a.gmt_occur = c_pay_scene.gmt_occur
left join(
    select user_id, gmt_occur, amt, amt_row from(
        select user_id, gmt_occur, amt, amt_count,
        row_number() over(partition by user_id, gmt_occur order by amt_count desc) as amt_row from(
            SELECT user_id, gmt_occur, amt, COUNT(1) as amt_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, amt
        ) as b
    ) c where c.amt_row = 1
) c_amt
on a.user_id = c_amt.user_id
and a.gmt_occur = c_amt.gmt_occur
left join(
    select user_id, gmt_occur, card_cert_no, card_cert_no_row from(
        select user_id, gmt_occur, card_cert_no, card_cert_no_count,
        row_number() over(partition by user_id, gmt_occur order by card_cert_no_count desc) as card_cert_no_row from(
            SELECT user_id, gmt_occur, card_cert_no, COUNT(1) as card_cert_no_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, card_cert_no
        ) as b
    ) c where c.card_cert_no_row = 1
) c_card_cert_no
on a.user_id = c_card_cert_no.user_id
and a.gmt_occur = c_card_cert_no.gmt_occur
left join(
    select user_id, gmt_occur, opposing_id, opposing_id_row from(
        select user_id, gmt_occur, opposing_id, opposing_id_count,
        row_number() over(partition by user_id, gmt_occur order by opposing_id_count desc) as opposing_id_row from(
            SELECT user_id, gmt_occur, opposing_id, COUNT(1) as opposing_id_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, opposing_id
        ) as b
    ) c where c.opposing_id_row = 1
) c_opposing_id
on a.user_id = c_opposing_id.user_id
and a.gmt_occur = c_opposing_id.gmt_occur
left join(
    select user_id, gmt_occur, income_card_no, income_card_no_row from(
        select user_id, gmt_occur, income_card_no, income_card_no_count,
        row_number() over(partition by user_id, gmt_occur order by income_card_no_count desc) as income_card_no_row from(
            SELECT user_id, gmt_occur, income_card_no, COUNT(1) as income_card_no_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, income_card_no
        ) as b
    ) c where c.income_card_no_row = 1
) c_income_card_no
on a.user_id = c_income_card_no.user_id
and a.gmt_occur = c_income_card_no.gmt_occur
left join(
    select user_id, gmt_occur, income_card_cert_no, income_card_cert_no_row from(
        select user_id, gmt_occur, income_card_cert_no, income_card_cert_no_count,
        row_number() over(partition by user_id, gmt_occur order by income_card_cert_no_count desc) as income_card_cert_no_row from(
            SELECT user_id, gmt_occur, income_card_cert_no, COUNT(1) as income_card_cert_no_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, income_card_cert_no
        ) as b
    ) c where c.income_card_cert_no_row = 1
) c_income_card_cert_no
on a.user_id = c_income_card_cert_no.user_id
and a.gmt_occur = c_income_card_cert_no.gmt_occur
left join(
    select user_id, gmt_occur, income_card_mobile, income_card_mobile_row from(
        select user_id, gmt_occur, income_card_mobile, income_card_mobile_count,
        row_number() over(partition by user_id, gmt_occur order by income_card_mobile_count desc) as income_card_mobile_row from(
            SELECT user_id, gmt_occur, income_card_mobile, COUNT(1) as income_card_mobile_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, income_card_mobile
        ) as b
    ) c where c.income_card_mobile_row = 1
) c_income_card_mobile
on a.user_id = c_income_card_mobile.user_id
and a.gmt_occur = c_income_card_mobile.gmt_occur
left join(
    select user_id, gmt_occur, income_card_bank_code, income_card_bank_code_row from(
        select user_id, gmt_occur, income_card_bank_code, income_card_bank_code_count,
        row_number() over(partition by user_id, gmt_occur order by income_card_bank_code_count desc) as income_card_bank_code_row from(
            SELECT user_id, gmt_occur, income_card_bank_code, COUNT(1) as income_card_bank_code_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, income_card_bank_code
        ) as b
    ) c where c.income_card_bank_code_row = 1
) c_income_card_bank_code
on a.user_id = c_income_card_bank_code.user_id
and a.gmt_occur = c_income_card_bank_code.gmt_occur
left join(
    select user_id, gmt_occur, province, province_row from(
        select user_id, gmt_occur, province, province_count,
        row_number() over(partition by user_id, gmt_occur order by province_count desc) as province_row from(
            SELECT user_id, gmt_occur, province, COUNT(1) as province_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, province
        ) as b
    ) c where c.province_row = 1
) c_province
on a.user_id = c_province.user_id
and a.gmt_occur = c_province.gmt_occur
left join(
    select user_id, gmt_occur, city, city_row from(
        select user_id, gmt_occur, city, city_count,
        row_number() over(partition by user_id, gmt_occur order by city_count desc) as city_row from(
            SELECT user_id, gmt_occur, city, COUNT(1) as city_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, city
        ) as b
    ) c where c.city_row = 1
) c_city
on a.user_id = c_city.user_id
and a.gmt_occur = c_city.gmt_occur
left join(
    select user_id, gmt_occur, is_peer_pay, is_peer_pay_row from(
        select user_id, gmt_occur, is_peer_pay, is_peer_pay_count,
        row_number() over(partition by user_id, gmt_occur order by is_peer_pay_count desc) as is_peer_pay_row from(
            SELECT user_id, gmt_occur, is_peer_pay, COUNT(1) as is_peer_pay_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, is_peer_pay
        ) as b
    ) c where c.is_peer_pay_row = 1
) c_is_peer_pay
on a.user_id = c_is_peer_pay.user_id
and a.gmt_occur = c_is_peer_pay.gmt_occur
left join(
    select user_id, gmt_occur, version, version_row from(
        select user_id, gmt_occur, version, version_count,
        row_number() over(partition by user_id, gmt_occur order by version_count desc) as version_row from(
            SELECT user_id, gmt_occur, version, COUNT(1) as version_count FROM atec_1000w_ins_data as a GROUP BY user_id, gmt_occur, version
        ) as b
    ) c where c.version_row = 1
) c_version
on a.user_id = c_version.user_id
and a.gmt_occur = c_version.gmt_occur

select * from huo_24_hour_user_time_mode;

select count(1) from huo_24_hour_user_time_mode;
--6573377

----------------------------------------------------------I am another beautiful boundary---------------------------------------------------------
-------------------------------divide the huo_24_hour_user_time_mode table into 5 parts------------------------------------------------------------
DROP TABLE IF EXISTS huo_user_id_num;

CREATE TABLE IF NOT EXISTS huo_user_id_num
AS
select user_id, row_number() over (order by user_id) as user_id_row
from (
    select distinct(user_id) 
    from atec_1000w_ins_data as a
) b;

select * from huo_user_id_num;

select max(user_id_row) from huo_user_id_num
;

-------1--50000-
---50001-100000-
--100000-150000-
--150001-200000-
--200001-212922-
drop table if exists huo_24_hour_user_time_mode_1;
create table if not exists huo_24_hour_user_time_mode_1
as 
select a.*
from huo_24_hour_user_time_mode as a 
inner join 
huo_user_id_num as b 
on a.user_id_1 = b.user_id 
where b.user_id_row >= 1
and b.user_id_row <= 50000;

drop table if exists huo_24_hour_user_time_mode_2;
create table if not exists huo_24_hour_user_time_mode_2
as 
select a.*
from huo_24_hour_user_time_mode as a 
inner join 
huo_user_id_num as b 
on a.user_id_1 = b.user_id 
where b.user_id_row >= 50001
and b.user_id_row <= 100000;

drop table if exists huo_24_hour_user_time_mode_3;
create table if not exists huo_24_hour_user_time_mode_3
as 
select a.*
from huo_24_hour_user_time_mode as a 
inner join 
huo_user_id_num as b 
on a.user_id_1 = b.user_id 
where b.user_id_row >= 100001
and b.user_id_row <= 150000;

drop table if exists huo_24_hour_user_time_mode_4;
create table if not exists huo_24_hour_user_time_mode_4
as 
select a.*
from huo_24_hour_user_time_mode as a 
inner join 
huo_user_id_num as b 
on a.user_id_1 = b.user_id 
where b.user_id_row >= 150001
and b.user_id_row <= 200000;

drop table if exists huo_24_hour_user_time_mode_5;
create table if not exists huo_24_hour_user_time_mode_5
as 
select a.*
from huo_24_hour_user_time_mode as a 
inner join 
huo_user_id_num as b 
on a.user_id_1 = b.user_id 
where b.user_id_row >= 200001
and b.user_id_row <= 212922;

select count(1) 
from (
    select * from huo_24_hour_user_time_mode_1
    union all
    select * from huo_24_hour_user_time_mode_2
    union all
    select * from huo_24_hour_user_time_mode_3
    union all
    select * from huo_24_hour_user_time_mode_4
    union all 
    select * from huo_24_hour_user_time_mode_5
) a;

select * from huo_24_hour_user_time_mode_1;

-------------------------------------------------------------------no name---------------------------------------------------------

drop table if exists huo_24_hour_user_time_total_1;
create table if not exists huo_24_hour_user_time_total_1
as 
select /*+ mapjoin(b)*/ a.*
from atec_1000w_ins_data as a 
inner join 
huo_user_id_num as b 
on a.user_id = b.user_id 
where b.user_id_row >= 1
and b.user_id_row <= 50000;

drop table if exists huo_24_hour_user_time_total_2;
create table if not exists huo_24_hour_user_time_total_2
as 
select /*+ mapjoin(b)*/ a.*
from atec_1000w_ins_data as a 
inner join 
huo_user_id_num as b 
on a.user_id = b.user_id 
where b.user_id_row >= 50001
and b.user_id_row <= 100000;

drop table if exists huo_24_hour_user_time_total_3;
create table if not exists huo_24_hour_user_time_total_3
as 
select /*+ mapjoin(b)*/ a.*
from atec_1000w_ins_data as a 
inner join 
huo_user_id_num as b 
on a.user_id = b.user_id 
where b.user_id_row >= 100001
and b.user_id_row <= 150000;

drop table if exists huo_24_hour_user_time_total_4;
create table if not exists huo_24_hour_user_time_total_4
as 
select /*+ mapjoin(b)*/ a.*
from atec_1000w_ins_data as a 
inner join 
huo_user_id_num as b 
on a.user_id = b.user_id 
where b.user_id_row >= 150001
and b.user_id_row <= 200000;

drop table if exists huo_24_hour_user_time_total_5;
create table if not exists huo_24_hour_user_time_total_5
as 
select /*+ mapjoin(b)*/ a.*
from atec_1000w_ins_data as a 
inner join 
huo_user_id_num as b 
on a.user_id = b.user_id 
where b.user_id_row >= 200001
and b.user_id_row <= 212922;

select count(1) 
from (
    select * from huo_24_hour_user_time_total_1
    union all
    select * from huo_24_hour_user_time_total_2
    union all
    select * from huo_24_hour_user_time_total_3
    union all
    select * from huo_24_hour_user_time_total_4
    union all 
    select * from huo_24_hour_user_time_total_5
) a;

select * from huo_24_hour_user_time_total_1;

--------------------------------------------------------------I am a pretty boundary-----------------------------------------------------------------
DROP TABLE IF EXISTS huo_24_hour_user_id_5;

CREATE TABLE IF NOT EXISTS huo_24_hour_user_id_5
AS
SELECT a.user_id_1 AS user_id_1, a.gmt_occur_1 AS gmt_occur_1, a.client_ip_mode AS client_ip_1, a.network_mode AS network_1
	, a.device_sign_mode AS device_sign_1, a.info_1_mode AS info_1_1, a.info_2_mode AS info_2_1, a.ip_prov_mode AS ip_prov_1
    , a.ip_city_mode AS ip_city_1, a.cert_prov_mode AS cert_prov_1, a.cert_city_mode AS cert_city_1, a.card_bin_prov_mode AS card_bin_prov_1
    , a.card_bin_city_mode AS card_bin_city_1, a.card_mobile_prov_mode AS card_mobile_prov_1, a.card_mobile_city_mode AS card_mobile_city_1
    , a.card_cert_prov_mode AS card_cert_prov_1, a.card_cert_city_mode AS card_cert_city_1, a.is_one_people_mode AS is_one_people_1
    , a.mobile_oper_platform_mode AS mobile_oper_platform_1, a.operation_channel_mode AS operation_channel_1
    , a.pay_scene_mode AS pay_scene_1, a.amt_mode AS amt_1, a.card_cert_no_mode AS card_cert_no_1, a.opposing_id_mode AS opposing_id_1
	, a.income_card_no_mode AS income_card_no_1, a.income_card_mobile_mode AS income_card_mobile_1, a.income_card_bank_code_mode AS income_card_bank_code_1
    , a.province_mode AS province_1, a.city_mode AS city_1, a.is_peer_pay_mode AS is_peer_pay_1, a.version_mode AS version_1, b.*
FROM huo_24_hour_user_time_mode_5 a
	LEFT JOIN huo_24_hour_user_time_total_5 b
	ON a.user_id_1 = b.user_id
    AND a.gmt_occur_1 = b.gmt_occur
		AND (TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 0, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 1, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 2, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 3, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 4, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 5, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 6, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 7, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 8, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 9, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 10, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 11, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 12, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 13, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 14, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 15, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 16, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 17, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 18, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 19, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 20, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 21, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 22, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 23, 'hour') OR
             TO_DATE(a.gmt_occur_1 ,'yyyy-MM-dd HH') = dateadd(TO_DATE(b.gmt_occur ,'yyyy-MM-dd HH'), 24, 'hour'));

-- huo_24_hour_user_id_1
-- huo_24_hour_user_id_2
-- huo_24_hour_user_id_3
-- huo_24_hour_user_id_4
-- huo_24_hour_user_id_5

select *
from huo_24_hour_user_id_2;

desc huo_6_hour_user_id;
---------------------------------------_1是主键--------------------------------------------------

----------------------------------------count---------------------------------------------------
DROP TABLE IF EXISTS huo_24_hour_user_id_features_0_5;

CREATE TABLE IF NOT EXISTS huo_24_hour_user_id_features_0_5
AS
SELECT user_id_1, gmt_occur_1
	, COUNT(event_id) AS event_id_count
	, COUNT(DISTINCT client_ip) AS client_ip_count, COUNT(DISTINCT network) AS network_count
	, COUNT(DISTINCT device_sign) AS device_sign_count, COUNT(DISTINCT info_1) AS info_1_count
	, COUNT(DISTINCT info_2) AS info_2_count, COUNT(DISTINCT ip_prov) AS ip_prov_count
	, COUNT(DISTINCT ip_city) AS ip_city_count, COUNT(DISTINCT cert_prov) AS cert_prov_count
	, COUNT(DISTINCT cert_city) AS cert_citu_count, COUNT(DISTINCT card_bin_prov) AS card_bin_prov_count
	, COUNT(DISTINCT card_bin_city) AS card_bin_city_count, COUNT(DISTINCT card_mobile_prov) AS card_mobile_prov_count
	, COUNT(DISTINCT card_mobile_city) AS card_mobile_city_count, COUNT(DISTINCT card_cert_city) AS card_cert_city_count
	, COUNT(DISTINCT is_one_people) AS is_one_people_count, COUNT(DISTINCT mobile_oper_platform) AS mobile_oper_platform_count
	, COUNT(DISTINCT operation_channel) AS operation_channel_count, COUNT(DISTINCT pay_scene) AS pay_scene_count
	, COUNT(DISTINCT amt) AS amt_count, SUM(amt) AS amt_sum
	, COUNT(DISTINCT card_cert_no) AS card_cert_no_count, COUNT(DISTINCT opposing_id) AS opposing_id_count
	, COUNT(DISTINCT income_card_no) AS income_card_no_count, COUNT(DISTINCT income_card_cert_no) AS income_card_cert_no_count
	, COUNT(DISTINCT income_card_mobile) AS income_card_mobile_count, COUNT(DISTINCT income_card_bank_code) AS income_card_bank_code_count
	, COUNT(DISTINCT province) AS province_count, COUNT(DISTINCT city) AS city_count
	, COUNT(DISTINCT is_peer_pay) AS is_peer_pay_count, COUNT(DISTINCT version) AS version_count
FROM huo_24_hour_user_id_5
GROUP BY user_id_1, gmt_occur_1;

-- huo_24_hour_user_id_features_0_1
-- huo_24_hour_user_id_features_0_2
-- huo_24_hour_user_id_features_0_3
-- huo_24_hour_user_id_features_0_4
-- huo_24_hour_user_id_features_0_5

select count(1) 
from (
    select * from huo_24_hour_user_id_features_0_1
    union all
    select * from huo_24_hour_user_id_features_0_2
    union all
    select * from huo_24_hour_user_id_features_0_3
    union all
    select * from huo_24_hour_user_id_features_0_4
    union all 
    select * from huo_24_hour_user_id_features_0_5
) a;
------------------------------------------没有amt的rate------------------------------------------
DROP TABLE IF EXISTS temp_0;

CREATE TABLE IF NOT EXISTS temp_0
AS
SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS info_1_1_hour_rate
FROM (
	SELECT event_id_1, info_1, COUNT(1) AS count_num
	FROM huo_6_hour_user_id
	GROUP BY event_id_1, info_1
) a
	LEFT JOIN (
		SELECT event_id_1, COUNT(1) AS count_num_1
		FROM huo_6_hour_user_id
		GROUP BY event_id_1
	) b
	ON a.event_id_1 = b.event_id_1;

SELECT *
FROM temp_0;

--------------------------------------I am a happy boundary-------------------------------------------

DROP TABLE IF EXISTS huo_6_hour_user_id_features_1_1;

CREATE TABLE IF NOT EXISTS huo_6_hour_user_id_features_1_1
AS
SELECT 
t.*, c_client_ip.client_ip_1_hour_rate, c_network.network_1_hour_rate, 
c_device_sign.device_sign_1_hour_rate, c_info_1.info_1_1_hour_rate, 
c_info_2.info_2_1_hour_rate, c_ip_prov.ip_prov_1_hour_rate, 
c_ip_city.ip_city_1_hour_rate, c_cert_prov.cert_prov_1_hour_rate, 
c_cert_city.cert_city_1_hour_rate, c_card_bin_prov.card_bin_prov_1_hour_rate, 
c_card_bin_city.card_bin_city_1_hour_rate, c_card_mobile_prov.card_mobile_prov_1_hour_rate, 
c_card_mobile_city.card_mobile_city_1_hour_rate, c_card_cert_prov.card_cert_prov_1_hour_rate, 
c_card_cert_city.card_cert_city_1_hour_rate, c_is_one_people.is_one_people_1_hour_rate, 
c_mobile_oper_platform.mobile_oper_platform_1_hour_rate, c_operation_channel.operation_channel_1_hour_rate, 
c_pay_scene.pay_scene_1_hour_rate, c_card_cert_no.card_cert_no_1_hour_rate, 
c_opposing_id.opposing_id_1_hour_rate, c_income_card_no.income_card_no_1_hour_rate, 
c_income_card_cert_no.income_card_cert_no_1_hour_rate, c_income_card_mobile.income_card_mobile_1_hour_rate, 
c_income_card_bank_code.income_card_bank_code_1_hour_rate, c_province.province_1_hour_rate, 
c_city.city_1_hour_rate, c_is_peer_pay.is_peer_pay_1_hour_rate, c_version.version_1_hour_rate
FROM atec_1000w_ins_data t
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS client_ip_1_hour_rate
		FROM (
			SELECT event_id_1, client_ip, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, client_ip
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_client_ip
	ON t.event_id = c_client_ip.event_id_1
		AND t.client_ip = c_client_ip.client_ip
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS network_1_hour_rate
		FROM (
			SELECT event_id_1, network, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, network
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_network
	ON t.event_id = c_network.event_id_1
		AND t.network = c_network.network
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS device_sign_1_hour_rate
		FROM (
			SELECT event_id_1, device_sign, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, device_sign
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_device_sign
	ON t.event_id = c_device_sign.event_id_1
		AND t.device_sign = c_device_sign.device_sign
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS info_1_1_hour_rate
		FROM (
			SELECT event_id_1, info_1, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, info_1
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_info_1
	ON t.event_id = c_info_1.event_id_1
		AND t.info_1 = c_info_1.info_1
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS info_2_1_hour_rate
		FROM (
			SELECT event_id_1, info_2, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, info_2
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_info_2
	ON t.event_id = c_info_2.event_id_1
		AND t.info_2 = c_info_2.info_2
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS ip_prov_1_hour_rate
		FROM (
			SELECT event_id_1, ip_prov, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, ip_prov
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_ip_prov
	ON t.event_id = c_ip_prov.event_id_1
		AND t.ip_prov = c_ip_prov.ip_prov
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS ip_city_1_hour_rate
		FROM (
			SELECT event_id_1, ip_city, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, ip_city
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_ip_city
	ON t.event_id = c_ip_city.event_id_1
		AND t.ip_city = c_ip_city.ip_city
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS cert_prov_1_hour_rate
		FROM (
			SELECT event_id_1, cert_prov, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, cert_prov
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_cert_prov
	ON t.event_id = c_cert_prov.event_id_1
		AND t.cert_prov = c_cert_prov.cert_prov
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS cert_city_1_hour_rate
		FROM (
			SELECT event_id_1, cert_city, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, cert_city
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_cert_city
	ON t.event_id = c_cert_city.event_id_1
		AND t.cert_city = c_cert_city.cert_city
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS card_bin_prov_1_hour_rate
		FROM (
			SELECT event_id_1, card_bin_prov, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, card_bin_prov
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_card_bin_prov
	ON t.event_id = c_card_bin_prov.event_id_1
		AND t.card_bin_prov = c_card_bin_prov.card_bin_prov
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS card_bin_city_1_hour_rate
		FROM (
			SELECT event_id_1, card_bin_city, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, card_bin_city
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_card_bin_city
	ON t.event_id = c_card_bin_city.event_id_1
		AND t.card_bin_city = c_card_bin_city.card_bin_city
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS card_mobile_prov_1_hour_rate
		FROM (
			SELECT event_id_1, card_mobile_prov, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, card_mobile_prov
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_card_mobile_prov
	ON t.event_id = c_card_mobile_prov.event_id_1
		AND t.card_mobile_prov = c_card_mobile_prov.card_mobile_prov
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS card_mobile_city_1_hour_rate
		FROM (
			SELECT event_id_1, card_mobile_city, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, card_mobile_city
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_card_mobile_city
	ON t.event_id = c_card_mobile_city.event_id_1
		AND t.card_mobile_city = c_card_mobile_city.card_mobile_city
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS card_cert_prov_1_hour_rate
		FROM (
			SELECT event_id_1, card_cert_prov, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, card_cert_prov
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_card_cert_prov
	ON t.event_id = c_card_cert_prov.event_id_1
		AND t.card_cert_prov = c_card_cert_prov.card_cert_prov
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS card_cert_city_1_hour_rate
		FROM (
			SELECT event_id_1, card_cert_city, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, card_cert_city
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_card_cert_city
	ON t.event_id = c_card_cert_city.event_id_1
		AND t.card_cert_city = c_card_cert_city.card_cert_city
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS is_one_people_1_hour_rate
		FROM (
			SELECT event_id_1, is_one_people, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, is_one_people
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_is_one_people
	ON t.event_id = c_is_one_people.event_id_1
		AND t.is_one_people = c_is_one_people.is_one_people
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS mobile_oper_platform_1_hour_rate
		FROM (
			SELECT event_id_1, mobile_oper_platform, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, mobile_oper_platform
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_mobile_oper_platform
	ON t.event_id = c_mobile_oper_platform.event_id_1
		AND t.mobile_oper_platform = c_mobile_oper_platform.mobile_oper_platform
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS operation_channel_1_hour_rate
		FROM (
			SELECT event_id_1, operation_channel, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, operation_channel
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_operation_channel
	ON t.event_id = c_operation_channel.event_id_1
		AND t.operation_channel = c_operation_channel.operation_channel
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS pay_scene_1_hour_rate
		FROM (
			SELECT event_id_1, pay_scene, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, pay_scene
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_pay_scene
	ON t.event_id = c_pay_scene.event_id_1
		AND t.pay_scene = c_pay_scene.pay_scene
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS card_cert_no_1_hour_rate
		FROM (
			SELECT event_id_1, card_cert_no, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, card_cert_no
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_card_cert_no
	ON t.event_id = c_card_cert_no.event_id_1
		AND t.card_cert_no = c_card_cert_no.card_cert_no
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS opposing_id_1_hour_rate
		FROM (
			SELECT event_id_1, opposing_id, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, opposing_id
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_opposing_id
	ON t.event_id = c_opposing_id.event_id_1
		AND t.opposing_id = c_opposing_id.opposing_id
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS income_card_no_1_hour_rate
		FROM (
			SELECT event_id_1, income_card_no, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, income_card_no
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_income_card_no
	ON t.event_id = c_income_card_no.event_id_1
		AND t.income_card_no = c_income_card_no.income_card_no
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS income_card_cert_no_1_hour_rate
		FROM (
			SELECT event_id_1, income_card_cert_no, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, income_card_cert_no
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_income_card_cert_no
	ON t.event_id = c_income_card_cert_no.event_id_1
		AND t.income_card_cert_no = c_income_card_cert_no.income_card_cert_no
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS income_card_mobile_1_hour_rate
		FROM (
			SELECT event_id_1, income_card_mobile, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, income_card_mobile
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_income_card_mobile
	ON t.event_id = c_income_card_mobile.event_id_1
		AND t.income_card_mobile = c_income_card_mobile.income_card_mobile
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS income_card_bank_code_1_hour_rate
		FROM (
			SELECT event_id_1, income_card_bank_code, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, income_card_bank_code
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_income_card_bank_code
	ON t.event_id = c_income_card_bank_code.event_id_1
		AND t.income_card_bank_code = c_income_card_bank_code.income_card_bank_code
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS province_1_hour_rate
		FROM (
			SELECT event_id_1, province, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, province
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_province
	ON t.event_id = c_province.event_id_1
		AND t.province = c_province.province
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS city_1_hour_rate
		FROM (
			SELECT event_id_1, city, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, city
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_city
	ON t.event_id = c_city.event_id_1
		AND t.city = c_city.city
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS is_peer_pay_1_hour_rate
		FROM (
			SELECT event_id_1, is_peer_pay, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, is_peer_pay
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_is_peer_pay
	ON t.event_id = c_is_peer_pay.event_id_1
		AND t.is_peer_pay = c_is_peer_pay.is_peer_pay
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS version_1_hour_rate
		FROM (
			SELECT event_id_1, version, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, version
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_version
	ON t.event_id = c_version.event_id_1
		AND t.version = c_version.version
        
SELECT *
FROM huo_6_hour_user_id_features_1;

-------------------------------------I am a lucky boundary----------------------------------------
-------------------------------------think about the money----------------------------------------
DROP TABLE IF EXISTS huo_6_hour_user_id_features_2;

CREATE TABLE IF NOT EXISTS huo_6_hour_user_id_features_2
AS
SELECT 
t.*, c_amt.amt_1_hour_rate, c_amt_function.amt_rank, c_amt_function.amt_dense_rank, 
c_amt_function.amt_row_number, c_amt_function.amt_avg, c_amt_function.amt_min, 
c_amt_function.amt_max, c_amt_function.amt_median, c_amt_function.amt_stddev, 
c_amt_function.amt_stddev_samp
FROM atec_1000w_ins_data t
	LEFT JOIN (
		SELECT a.*, b.count_num_1, a.count_num / b.count_num_1 AS amt_1_hour_rate
		FROM (
			SELECT event_id_1, amt, COUNT(1) AS count_num
			FROM huo_1_hour_user_id
			GROUP BY event_id_1, amt
		) a
			LEFT JOIN (
				SELECT event_id_1, COUNT(1) AS count_num_1
				FROM huo_1_hour_user_id
				GROUP BY event_id_1
			) b
			ON a.event_id_1 = b.event_id_1
	) c_amt
	ON t.event_id = c_amt.event_id_1
		AND t.amt = c_amt.amt
	LEFT JOIN (
		SELECT event_id_1, amt_1
        	, rank() OVER (PARTITION BY event_id_1 ORDER BY amt ASC) AS amt_rank
        	, dense_rank() OVER (PARTITION BY event_id_1 ORDER BY amt ASC) AS amt_dense_rank
        	, row_number() OVER (PARTITION BY event_id_1 ORDER BY amt ASC) AS amt_row_number
			, AVG(amt) AS amt_avg, MIN(amt) AS amt_min
			, MAX(amt) AS amt_max, median(amt) AS amt_median
			, STDDEV(amt) AS amt_stddev, STDDEV_SAMP(amt) AS amt_stddev_samp
		FROM huo_1_hour_user_id
		GROUP BY event_id_1, amt_1
	) c_amt_function
	ON t.event_id = c_amt_function.event_id_1
		AND t.amt = c_amt_function.amt_1;

SELECT *
FROM huo_6_hour_user_id_features_2;